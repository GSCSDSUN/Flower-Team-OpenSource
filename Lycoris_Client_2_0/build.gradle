buildscript {
    repositories {
        maven {
            name = "forge https"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = "forge http"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "central"
            url = "https://repo1.maven.org/maven2"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "1.7.10-1.0.0"
group= "xxx.xxx" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Xxxxx"

compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
    compileJava.options.encoding = 'UTF-8'
}

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
    // real examples
    compile('net.java.dev.jna:jna:4.4.0')
    compile('net.java.dev.jna:platform:3.4.0')

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

/*
jar {
    manifest {
        attributes 'FMLCorePlugin': 'xxxx'
        attributes 'FMLCorePluginContainsFMLMod': 'true'
    }
}
*/
