/*
 * Decompiled with CFR 0.150.
 */
package digital.rbq.module.impl.exploit;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.UUID;
import me.zane.basicbus.api.annotations.Listener;
import net.minecraft.network.play.server.S38PacketPlayerListItem;
import digital.rbq.annotations.Label;
import digital.rbq.events.packet.ReceivePacketEvent;
import digital.rbq.events.player.MotionUpdateEvent;
import digital.rbq.module.Module;
import digital.rbq.module.ModuleCategory;
import digital.rbq.module.annotations.Category;
import digital.rbq.utils.Logger;

@Label(value="Anti Vanish")
@Category(value=ModuleCategory.EXPLOIT)
public final class AntiVanishMod
extends Module {
    private List<UUID> vanished = new ArrayList<UUID>();

    @Listener(value=ReceivePacketEvent.class)
    public void onReceivePacket(ReceivePacketEvent event) {
        S38PacketPlayerListItem listItem;
        if (event.getPacket() instanceof S38PacketPlayerListItem && (listItem = (S38PacketPlayerListItem)event.getPacket()).func_179768_b() == S38PacketPlayerListItem.Action.UPDATE_LATENCY) {
            Iterator<S38PacketPlayerListItem.AddPlayerData> iterator = listItem.func_179767_a().iterator();
            while (iterator.hasNext()) {
                S38PacketPlayerListItem.AddPlayerData o;
                S38PacketPlayerListItem.AddPlayerData data = o = iterator.next();
                UUID uuid = data.getProfile().getId();
                if (mc.getNetHandler().getPlayerInfo(uuid) != null || this.checkList(uuid)) continue;
                Logger.log(this.getName(uuid) + " has gone invisible.");
            }
        }
    }

    @Listener(value=MotionUpdateEvent.class)
    public final void onMotionUpdate(MotionUpdateEvent event) {
        if (event.isPre()) {
            for (UUID uuid : this.vanished) {
                if (mc.getNetHandler().getPlayerInfo(uuid) == null) continue;
                Logger.log(this.getName(uuid) + " is now visible.");
                this.vanished.remove(uuid);
            }
        }
    }

    private String getName(UUID uuid) {
        try {
            String line;
            URL url = new URL("https://namemc.com/profile/" + uuid.toString());
            URLConnection connection = url.openConnection();
            connection.setRequestProperty("User-Agent", "Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.7; en-US; rv:1.9.2.2) Gecko/20100316 Firefox/3.6.2");
            BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
            String name = null;
            while ((line = reader.readLine()) != null) {
                if (!line.contains("<title>")) continue;
                name = line.split("\u00a7")[0].trim().replaceAll("<title>", "").replaceAll("</title>", "").replaceAll("\u2013 Minecraft Profile \u2013 NameMC", "").replaceAll("\u00e2\u20ac\u201c Minecraft Profile \u00e2\u20ac\u201c NameMC", "");
            }
            reader.close();
            return name;
        }
        catch (Exception e) {
            e.printStackTrace();
            return "(Failed) " + uuid;
        }
    }

    private boolean checkList(UUID uuid) {
        if (this.vanished.contains(uuid)) {
            this.vanished.remove(uuid);
            return true;
        }
        this.vanished.add(uuid);
        return false;
    }
}

